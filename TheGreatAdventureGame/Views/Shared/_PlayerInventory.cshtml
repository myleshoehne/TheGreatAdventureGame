@using TheGreatAdventureGame.Models.Entities.Players
@model Player

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Player Vital Stats</title>
    <style>
        /* Inventory Container */
        .inventory-container {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        padding: 10px;
        border: 2px solid black;
        border-radius: 8px;
        background-color: #f3f3f3;
        }

        /* Inventory Item Slots */
        .inventory-item-container {
        width: 60px;
        height: 60px;
        border: 2px solid gray;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        cursor: pointer;
        transition: transform 0.1s ease-in-out;
        }

        .inventory-item-container:hover {
        transform: scale(1.1);
        }

        /* Inventory Item Images */
        .inventory-item {
        width: 50px;
        height: 50px;
        object-fit: cover;
        }

        /* Equipped Item Slot */
        .equipped-item-container {
        width: 80px;
        height: 80px;
        border: 2px solid #4caf50;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        margin-top: 15px;
        }

        /* Equipped Item Image */
        .equipped-item {
        width: 70px;
        height: 70px;
        object-fit: cover;
        }

        .item-separator {
        border-right: 2px solid #ccc; /* Vertical separator */
        margin: 0 5px; /* Space between the item and the separator */
        }

    </style>
</head>
<body>
    <div class="inventory-container">
        <div class="inventory-item-container">
            <div class="inventory-item">
                @Model.EquippedItem.Name
            </div>
        </div>
        <div class="item-separator"></div>
        @{
            int invIndexTotal = Model.Inventory.Count - 1;
            for (int i = 0; i < Model.InventoryCapacity; i++)
            {
                if (invIndexTotal >= i)
                {
                    var item = Model.Inventory.ElementAt(i);
                    //TODO: just add a rarity color method that returns the color so we can resuse this, also need to get equipped item rarity color
                    string rarityColor = item.Value.Rarity switch
                    {
                        Models.Rarity.Common => "#9e9e9e", // Gray
                        Models.Rarity.Uncommon => "#4caf50", // Green
                        Models.Rarity.Rare => "#2196f3", // Blue
                        Models.Rarity.Epic => "#9c27b0", // Purple
                        Models.Rarity.Legendary => "#ffd700", // Gold
                        _ => "white"
                    };

                    if(Model.EquippedItem.ItemTypeID != item.Value.ItemTypeID)
                    {
                        <div class="inventory-item-container" style="background-color: @rarityColor">
                            <div class="inventory-item">
                                @item.Value.Name
                            </div>
                        </div>
                    }
                    
                }
                else 
                {
                    <div class="inventory-item-container">
                        <div class="inventory-item"></div>
                    </div>
                }
            }

        }
        
        
    </div>
    <script>
        
    </script>

</body>
</html>


